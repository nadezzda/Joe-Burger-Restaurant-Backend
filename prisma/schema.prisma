generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  email     String   @unique
  password  String
  name      String
  phone     String   @default("")

  orders  Order[]
  reviews Review[]
}

model MenuItem {
  id          Int     @id @default(autoincrement())
  name        String
  slug        String  @unique
  description String
  ingredients String?
  weight      Int
  count       Int
  price       Decimal

  images     Image[]
  category   Category    @relation(fields: [categoryId], references: [id])
  categoryId Int         @map("category_id")
  orderItems OrderItem[]
  reviews    Review[]
}

model Image {
  id  Int    @id @default(autoincrement())
  url String

  MenuItem   MenuItem? @relation(fields: [menuItemId], references: [id])
  menuItemId Int?      @map("menu_item_id")
}

model Category {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String

  menuItems MenuItem[]
}

model Order {
  id         Int      @id @default(autoincrement())
  number     Int      @unique
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")
  status     String
  totalPrice Decimal  @map("total_price")

  items OrderItem[]

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")
}

model OrderItem {
  id       Int     @id @default(autoincrement())
  quantity Int
  price    Decimal

  order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?   @map("order_id")

  menuItem   MenuItem? @relation(fields: [menuItemId], references: [id])
  menuItemId Int?      @map("menu_item_id")
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  rating    Int
  text      String

  menuItem   MenuItem? @relation(fields: [menuItemId], references: [id])
  menuItemId Int?      @map("menu_item_id")

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @map("user_id")
}
